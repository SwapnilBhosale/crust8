const MEMORY_SIZE : usize = 4 * 1024;
use std::fmt;
use std::fmt::Debug;
use cpu::Cpu;

pub struct Chip{
   pub memory : [usize;MEMORY_SIZE] ,
   pub cpu : Cpu
}

impl Default for Chip {
    fn default() -> Chip{
        Chip{
            memory : [0;MEMORY_SIZE],
            cpu : Cpu::default()
        }
    }
}

impl Chip{
    pub fn start_cpu(&mut self){
        let char_set = [
            0xF0,0x90,0x90,0x90,0xF0,
            0x20,0x60,0x20,0x20,0x70,
            0xF0,0x10,0xF0,0x80,0xF0,
            0xF0,0x10,0xF0,0x10,0xF0,
            0x90,0x90,0xF0,0x10,0x10,
            0xF0,0x80,0xF0,0x10,0xF0,
            0xF0,0x80,0xF0,0x90,0xF0,
            0xF0,0x10,0x20,0x40,0x40,
            0xF0,0x90,0xF0,0x90,0xF0,
            0xF0,0x90,0xF0,0x10,0xF0,
            0xF0,0x90,0xF0,0x90,0x90,
            0xE0,0x90,0xE0,0x90,0xE0,
            0xF0,0x80,0x80,0x80,0xF0,
            0xE0,0x90,0x90,0x90,0xE0,
            0xF0,0x80,0xF0,0x80,0xF0,
            0xF0,0x80,0xF0,0x80,0x80, 
            ];

        for i in (0..80){
            self.memory[i] = char_set[i];
        }

        self.cpu.reg_pc = 0x200;
    }
}

impl Debug for Chip {
    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {
        self.memory[..].fmt(formatter)
    }
}
